#!/usr/bin/python3

from optparse import OptionParser
import serial
import time

class InFocusProjector():
    def __init__(self):
        self.ser = serial.Serial(
            port='/dev/ttyUSB0',
            baudrate=19200,
            parity=serial.PARITY_NONE,
            stopbits=serial.STOPBITS_ONE,
            bytesize=serial.EIGHTBITS
        )
        # ser.isOpen()
    def _response(self):
        out = bytes('', 'ASCII')
        while self.ser.inWaiting() > 0:
            out += self.ser.read(1)
        return out
    def _cmd(self, command):
        b = "%s\n" % command
        self.ser.write(bytes(b, 'ASCII'))
        time.sleep(1)
        res = self._response()
        print(res)
        return res

    def status(self):
        """ Report status settings. """
        self._cmd("(LMP?)")
        self._cmd("(BRT?)")
        self._cmd("(ASC?)")
        self._cmd("(DSC?)")
        self._cmd("(SYS?)")
        self._cmd("(LB1?)")
        self._cmd("(LB2?)")
        self._cmd("(O00?)")
        self._cmd("(O30?)")
        self._cmd("(O60?)")
        self._cmd("(O90?)")

    def power(self, state):
        if ('on' == state):
            print(self._cmd('(PWR1)'))
        elif ('off' == state):
            print(self._cmd('(PWR0)'))
    def source(self, source):
        if (not source):
            print(self._cmd('(SRC?)'))
        elif ('hdmi' == source):
            print(self._cmd('(SRC0)'))
        elif ('vga' == source):
            print(self._cmd('(SRC1)'))
    def contrast(self, val):
        current = self._cmd('(CON?)')
        print(current)
        r = re.match(current, r'\(CON\?\)\(\d+-\d+,(\d+)\)')
        curval = int(r.group(2))
        if ('up' == val):
            newval = int(curval * 1.1)
        elif ('down' == val):
            newval = int(curval * 0.9)
        print(self._cmd('(CON%d)'))
    def navigate(self, state):
        if ('up' == state):
            print(self._cmd('(NAV1)'))
        elif ('down' == state):
            print(self._cmd('(NAV2)'))
        elif ('select' == state):
            print(self._cmd('(NAV3)'))

def main():
    parser = OptionParser(usage="usage: %prog [options]",
                          version="%prog 0.0")
    parser.add_option("-s", "--serialport",
                      action="store",
                      dest="port",
                      default="/dev/ttyUSB0",
                      help="Serial port device",)
    (options, args) = parser.parse_args()
    print(options)
    print(args)

    p = InFocusProjector()
    if (0 == len(args)):
        p.status()
    elif 'power' == args[0]:
        p.power(args[1])
    elif 'source' == args[0]:
        p.source(args[1])
    elif 'contrast' == args[0]:
        p.contrast(args[1])
    elif 'navigate' == args[0]:
        p.navigate(args[1])

if __name__ == '__main__':
    main()
